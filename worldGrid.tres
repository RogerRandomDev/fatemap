[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://b8oc282hfagk1"]

[sub_resource type="Shader" id="Shader_6rikv"]
code = "shader_type spatial;
render_mode alpha_to_coverage,depth_prepass_alpha,unshaded;
uniform float scale = 1.0;

void vertex() {
	VERTEX=VERTEX*scale;
}

void fragment() {
	ALPHA=0.25-float((length(vec2(VERTEX.x,VERTEX.z)/scale)/64.0)>0.9)*0.25;
}

//void light() {
//	// Called for every pixel for every light affecting the material.
//	// Uncomment to replace the default light processing function with this one.
//}
"

[resource]
render_priority = 0
shader = SubResource("Shader_6rikv")
shader_parameter/scale = 1.0
